name: "TEMP Push and deploy to dev"

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: Version
        default: ""
      deploy:
        type: boolean
        required: true
        default: false
        description: Deploy to Dev
  workflow_call:
    inputs:
      version:
        type: string
        required: true
        description: Version
        default: ""
      deploy:
        type: boolean
        required: true
        default: false
        description: Deploy to Dev

jobs:

  push-to-dev:
    runs-on: org
    env:
        DOCKER_REGISTRY_DEV: "docker.dev.comet.com"
        # GITHUB_REGISTRY: "ghcr.io/comet-ml/opik" 
        GITHUB_REGISTRY: "ghcr.io/comet-ml/comet-llm-eval-opik" 
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{env.GITHUB_REGISTRY}}
          username: "github-actions"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull docker images
        run: |
            docker pull ${{env.GITHUB_REGISTRY}}/opik-backend:${{inputs.version}}
            docker pull ${{env.GITHUB_REGISTRY}}/opik-frontend:${{inputs.version}}
            docker pull ${{env.GITHUB_REGISTRY}}/opik-frontend-comet:${{inputs.version}}

            docker tag ${{env.GITHUB_REGISTRY}}/opik-backend:${{inputs.version}} ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-backend:${{inputs.version}}
            docker tag ${{env.GITHUB_REGISTRY}}/opik-frontend:${{inputs.version}} ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-frontend:${{inputs.version}}
            docker tag ${{env.GITHUB_REGISTRY}}/opik-frontend-comet:${{inputs.version}} ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-frontend-comet:${{inputs.version}}

            docker push ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-backend:${{inputs.version}}
            docker push ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-frontend:${{inputs.version}}
            docker push ${{env.DOCKER_REGISTRY_DEV}}/comet-ml/opik-frontend-comet:${{inputs.version}}

  deploy-to-dev:
    if: inputs.deploy
    needs:
     - push-to-dev
    secrets: inherit
    uses: comet-ml/comet-deployment/.github/workflows/deploy_opik.yaml@main
    with:
        comet_env: development
        opik_version: ${{ inputs.version }}
