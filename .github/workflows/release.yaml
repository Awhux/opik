# Internal release
name: "Release"
run-name: "Release from ${{github.ref_name}} by @${{ github.actor }}"

on:
  workflow_dispatch:
    inputs:
      version_increment:
        description: "Select which version to increment"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  create-git-tag:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.increment_version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Increment version
        id: increment_version
        run: |
          echo "Incrementing version..."
          BASE_VERSION=$(cat version.txt)

          if [[ ! "$BASE_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: $BASE_VERSION"
            exit 1
          fi

          major_version=$(echo "$BASE_VERSION" | cut -d '.' -f 1)
          minor_version=$(echo "$BASE_VERSION" | cut -d '.' -f 2)
          patch_version=$(echo "$BASE_VERSION" | cut -d '.' -f 3)

          INCREMENT_TYPE="${{ github.event.inputs.version_increment }}"
          case "$INCREMENT_TYPE" in
            major)
              major_version=$((major_version + 1))
              minor_version=0
              patch_version=0
              ;;
            minor)
              minor_version=$((minor_version + 1))
              patch_version=0
              ;;
            patch)
              patch_version=$((patch_version + 1))
              ;;
            *)
              echo "Invalid version increment type: $INCREMENT_TYPE"
              exit 1
              ;;
          esac

          new_version="${major_version}.${minor_version}.${patch_version}"
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

      - name: Update version.txt
        run: |
          echo "$new_version" > version.txt

      - name: Commit updated version file
        run: |
          git config --local user.email "github-actions@comet.com"
          git config --local user.name "github-actions"
          git add version.txt
          git commit -m "Set version to ${{ steps.increment_version.outputs.new_version }}"

      - name: Push new version.txt
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT_TO_ACCESS_GITHUB_API }}
          branch: ${{ github.ref }}
          force_with_lease: true

      - name: Create git tag
        run: |
          set -x
          git config --local user.email "github-actions@comet.com"
          git config --local user.name "github-actions"
          git tag ${{ steps.increment_version.outputs.new_version }}
          git push --no-verify origin ${{ steps.increment_version.outputs.new_version }}

  release-apps:
    needs:
      - create-git-tag
    uses: ./.github/workflows/build_apps.yml
    secrets: inherit
    with:
      version: ${{ needs.create-git-tag.outputs.new_version }}

  release-sdk:
    needs:
      - create-git-tag
    uses: ./.github/workflows/build_and_publish_sdk.yml
    secrets: inherit
    with:
      version: ${{ needs.create-git-tag.outputs.new_version }}
      is_release: true

  publish-helm-chart:
    needs:
      - create-git-tag
    uses: ./.github/workflows/publish_helm_chart.yaml
    secrets: inherit
    with:
      version: ${{ needs.create-git-tag.outputs.new_version }}

  release-installer:
    needs:
      - create-git-tag
    uses: ./.github/workflows/build_and_publish_installer.yaml
    secrets: inherit
    with:
      version: ${{ needs.create-git-tag.outputs.new_version }}
      is_release: true

  create-github-release:
    needs:
      - create-git-tag
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Changelog
        id: release_changelog
        uses: jaywcjlove/changelog-generator@v1.9.6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          show-emoji: "false"

      - name: Create GitHub release
        uses: mikepenz/action-gh-release@v0.4.1
        with:
          tag_name: ${{ needs.create-git-tag.outputs.new_version }}
          body: ${{ steps.release_changelog.outputs.changelog }}
          generate_release_notes: true
